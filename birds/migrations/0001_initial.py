# Generated by Django 4.2.9 on 2025-05-23 17:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('author', models.CharField(max_length=255)),
                ('image_url', models.URLField(max_length=500)),
                ('category', models.CharField(max_length=100)),
                ('preview_text', models.TextField()),
                ('published_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('scientific_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image_url', models.URLField(max_length=500)),
                ('rarity', models.CharField(choices=[('S', 'S-Rarity'), ('A', 'A-Rarity'), ('B', 'B-Rarity'), ('C', 'C-Rarity')], max_length=1)),
                ('conservation_status', models.CharField(choices=[('EX', 'Extinct'), ('EW', 'Extinct in the Wild'), ('CR', 'Critically Endangered'), ('EN', 'Endangered'), ('VU', 'Vulnerable'), ('NT', 'Near Threatened'), ('LC', 'Least Concern'), ('DD', 'Data Deficient')], max_length=2)),
                ('weight_range', models.CharField(blank=True, max_length=50)),
                ('wingspan_range', models.CharField(blank=True, max_length=50)),
                ('length_range', models.CharField(blank=True, max_length=50)),
                ('kingdom', models.CharField(default='Animalia', max_length=100)),
                ('phylum', models.CharField(default='Chordata', max_length=100)),
                ('bird_class', models.CharField(default='Aves', max_length=100)),
                ('order', models.CharField(max_length=100)),
                ('family', models.CharField(max_length=100)),
                ('habitat', models.TextField()),
                ('behavior', models.TextField()),
                ('feeding_habits', models.TextField()),
                ('breeding_info', models.TextField()),
                ('migration_pattern', models.TextField(blank=True)),
                ('sound_description', models.TextField(blank=True)),
                ('range_map_url', models.URLField(blank=True, max_length=500)),
                ('global_distribution', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BirdCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image_url', models.URLField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Bird categories',
            },
        ),
        migrations.CreateModel(
            name='UserStreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('last_activity_date', models.DateField(null=True)),
                ('locations_explored', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bird_streak', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BirdSound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sound_url', models.URLField(max_length=500)),
                ('sound_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bird', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sounds', to='birds.bird')),
            ],
        ),
        migrations.CreateModel(
            name='BirdImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=500)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bird', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='birds.bird')),
            ],
            options={
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BirdIdentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('sound_url', models.URLField(blank=True, max_length=500)),
                ('identified_species', models.CharField(max_length=255)),
                ('confidence_level', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ai_response', models.JSONField()),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('location_name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bird', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='identifications', to='birds.bird')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('response', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_chats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorite', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(default=False)),
                ('bird', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bird_usercollection_bird', to='birds.bird')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bird_user_collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_added'],
                'unique_together': {('user', 'bird')},
            },
        ),
        migrations.CreateModel(
            name='UserBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bird_article_bookmarks', to='birds.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bird_user_bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'article')},
            },
        ),
        migrations.CreateModel(
            name='SimilarBird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('bird', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_birds', to='birds.bird')),
                ('similar_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_to', to='birds.bird')),
            ],
            options={
                'unique_together': {('bird', 'similar_to')},
            },
        ),
        migrations.CreateModel(
            name='BirdCategoryAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bird', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_assignments', to='birds.bird')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bird_assignments', to='birds.birdcategory')),
            ],
            options={
                'unique_together': {('bird', 'category')},
            },
        ),
    ]
